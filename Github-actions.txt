Github actions is a workflow automation service. It can automate all the repository related actions and tasks.

1. Code deployment - Automate code builds, tests and deployments.
2. Code & Repository management - Automate code reviews, issues management, etc.

Git is a source-code version control system.

1. Commits - Code snapshots.
2. Branches - Multiple versions of code. Used for collaboration and to serve multiple environments.
3. Checkout - Copy code between branches and move to different branches.


Github on the other hand is a Git service provider. Github is the one providing the Github actions to manage git repositories.

git add <files> - Add the files to be committed. Also called "staging" action.
git commit -m "<message>" - Push all staged changes to repository. The commits are called working trees as well.
HEAD - Shows which commit is visible/active. Useful when moving between commits to keep track of our work.
git checkout <commit hash> - To move between commits.
git revert <commit hash> - Reverting a specific commit. It can be any commit. This command creates a new commit, and rolls-back the changes made in the specified commit.
git reset <commit hash>- Better not to use.
git branch <branch name> - Creates a new branch with the HEAD commit.
git merge <source branch name> - Used to merge the changes from the local branches to the main branch and vice-versa.
git checkout <branch name> - Checks out the code from the existing branch, and switches to the new branch. git checkout can be used to create a new branch as well using the option "-b" (Ex. git checkout -b <new_branch>).


**Testing a second commit**

**Testing a pull request**



